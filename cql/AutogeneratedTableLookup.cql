/*  
  Library: Cervical Cancer Management Risk Look Up
  Author: CMS Alliance to Modernize Healthcare, operated by THE MITRE Corporation.

  (C) 2021 The MITRE Corporation. All Rights Reserved. 
  Approved for Public Release: 21-1556. 
  Distribution Unlimited.

  Unless otherwise noted, this work is available under an Apache 2.0 license. 
  It was produced by the MITRE Corporation for the Division of Cancer Prevention 
  and Control, Centers for Disease Control and Prevention in accordance with the 
  Statement of Work, contract number 75FCMC18D0047, task order number 75D30120F09743.
*/

library AutogeneratedTableLookup version '1.0.0'

using FHIR version '4.0.1'
include "FHIRHelpers" version '4.0.1' called FHIRHelpers
include "AutogeneratedRiskTables" version '1.0.0' called RiskTables

// Define Tables
define GeneralScreeningTable:
  RiskTables.GeneralScreening

define SurveillanceTable:
  RiskTables.Surveillance

define ColposcopyResultsTable:
  RiskTables.ColposcopyResults

define PostColposcopyTable:
  RiskTables.PostColposcopy

define PostTreatmentTable:
  RiskTables.PostTreatment

// Some of the entries in the risk tables specify the cytology result as 'High Grade'.
// This function takes a fully-specified cytology result and returns either 'High Grade' 
// or 'NULL', depending upon `currentPapVal`.
define function HighGradePap(currPapVal String):
  if currPapVal = 'ASC-H' or
    currPapVal = 'AGC' or
    currPapVal = 'HSIL+' then
      'High Grade'
  else
      'NULL'

// Some of the entries in the risk tables combine historical screening HPV + cytlogy 
// results into a single string. This function takes the HPV and cytology results 
// and returns a string which can be used to lookup the appropriate value in the 
// risk tables.
define function ScreeningText(hpvResult String, cytoResult String, spacerString String, noHistoryString String):
  if cytoResult = 'ALL' or cytoResult is null then
    if hpvResult != 'ALL' then
      hpvResult
    else
      noHistoryString
  else if cytoResult = 'NILM' then
    if hpvResult = 'HPV-negative' then
      'Cotest-negative'
    else if hpvResult = 'HPV-positive' then
      hpvResult + spacerString + cytoResult
    else
      noHistoryString
  else
    if hpvResult != 'ALL' then
      hpvResult + spacerString + cytoResult
    else
      noHistoryString

// Lookup risk and management recommendation for Table 1: General Screening
define function GetGeneralScreeningManagement(prevHpvVal String, prevPapVal String, currHpvVal String, currPapVal String):
  Coalesce(
    Coalesce( // Case 1: Current cytology is fully specified
      GeneralScreeningTable T
      where T.history = ScreeningText(prevHpvVal, prevPapVal, '/', 'NO HISTORY')
        and T.hpv = currHpvVal
        and T.pap = currPapVal
        return T.management
    ),
    Coalesce( // Case 2: Current cytology is 'High Grade'
      GeneralScreeningTable T
      where T.history = ScreeningText(prevHpvVal, prevPapVal, '/', 'NO HISTORY')
        and T.hpv = currHpvVal
        and T.pap = HighGradePap(currPapVal)
        return T.management
    )
  )

// Some of the entries in the risk tables refer to 'ASC_US' instead of 'ASC-US'.
// This function converts from the latter to former.
define function AscusAlternativeSpelling(ascus String):
  if ascus = 'ASC-US' then 'ASC_US'
  else 'NULL'

// Some of the entries in the risk tables group different cytology results together.
// This function takes a fully specified cytology result and returns the grouped 
// string.
define function HighGradeOrAscusLsilPap(currPapVal String):
  if currPapVal = 'ASC-US' or
    currPapVal = 'LSIL' then
      'ASC-US, LSIL'
  else if currPapVal = 'ASC-H' or
    currPapVal = 'AGC' or
    currPapVal = 'HSIL+' then
      'High Grade'
  else
      'NULL'

// Some of the entries in the risk tables refer to 'HPV16-,18+' instead of 'HPV16-, HPV18+'.
// This function converts from the latter to former.
define function hpv18PlusAlternativeSpelling(hpv18 String):
  if hpv18 = 'HPV16-, HPV18+' then 'HPV16-,18+'
  else hpv18

// Some of the entries in the risk tables add a leading space to 'Cotest-negative'.
// This function adds that leading space to 'Cotest-negative'.
define function historyLeadingSpace(history String):
  if history = 'Cotest-negative' then ' Cotest-negative'
  else history

// Lookup risk and management recommendation for Table 2: Surveillance
define function GetSurveillanceManagement(prev2HpvVal String, prev2PapVal String, prevHpvVal String, prevPapVal String, currHpvVal String, currPapVal String):
  Coalesce(
    Coalesce( // Case 1: Current cytology is fully specified
      SurveillanceTable T
      where T.history_prev_2 = ScreeningText(prev2HpvVal, prev2PapVal, '/', 'none')
        and T.history = historyLeadingSpace(ScreeningText(prevHpvVal, prevPapVal, '/', 'none'))
        and T.hpv = hpv18PlusAlternativeSpelling(currHpvVal)
        and T.pap = currPapVal
        return T.management
    ),
    Coalesce( // Case 2: 'ASC_US' instead of 'ASC-US'
      SurveillanceTable T
      where T.history_prev_2 = ScreeningText(prev2HpvVal, prev2PapVal, '/', 'none')
        and T.history = historyLeadingSpace(ScreeningText(prevHpvVal, prevPapVal, '/', 'none'))
        and T.hpv = hpv18PlusAlternativeSpelling(currHpvVal)
        and T.pap = AscusAlternativeSpelling(currPapVal)
        return T.management
    ),
    Coalesce( // Case 3: 'ASC-US, LSIL' or 'High Grade'
      SurveillanceTable T
      where T.history_prev_2 = ScreeningText(prev2HpvVal, prev2PapVal, '/', 'none')
        and T.history = historyLeadingSpace(ScreeningText(prevHpvVal, prevPapVal, '/', 'none'))
        and T.hpv = hpv18PlusAlternativeSpelling(currHpvVal)
        and T.pap = HighGradeOrAscusLsilPap(currPapVal)
        return T.management
    ),
    Coalesce( // Case 4: No recent cytology result
      SurveillanceTable T
      where T.history_prev_2 = ScreeningText(prev2HpvVal, prev2PapVal, '/', 'none')
        and T.history = historyLeadingSpace(ScreeningText(prevHpvVal, prevPapVal, '/', 'none'))
        and T.hpv = hpv18PlusAlternativeSpelling(currHpvVal)
        and T.pap = 'ALL'
        return T.management
    )
  )

define function GetColposcopyResultsManagement(preBiopsyHpvVal String, preBiopsyPapVal String, biopsyVal String):
  Coalesce(
    Coalesce( // Case 1: Combined HPV and Cytology results separated by a space
      ColposcopyResultsTable T
        where T.referral_screen_result = ScreeningText(preBiopsyHpvVal, preBiopsyPapVal, ' ', 'none')
          and T.biopsy = biopsyVal
          return T.management
    ),
    Coalesce( // Case 2: Just Cytology results
      ColposcopyResultsTable T
        where T.referral_screen_result = preBiopsyPapVal
          and T.biopsy = biopsyVal
          return T.management
    )
  )
  
define function HighOrLowGradeResults(hpvVal String, papVal String):
  case
    when (
      hpvVal = 'HPV-positive' and
      papVal = 'NILM'
    ) then 'Low Grade'
    when (
      papVal = 'ASC-US' or
      papVal = 'LSIL'
    ) then 'Low Grade'
    when (
      papVal = 'ASC-H' or
      papVal = 'AGC' or
      papVal = 'HSIL+'
    ) then 'High Grade'
    else null
  end

define function PostColposcopyPastHistory(prev2HpvVal String, prev2PapVal String, prevHpvVal String, prevPapVal String):
  case
    when (
      prev2HpvVal is null and
      prev2PapVal is null and
      prevHpvVal is null and
      prevPapVal is null
    ) then 'none'
    when (
      prev2HpvVal is null and
      prev2PapVal is null and
      prevHpvVal = 'HPV-negative' and
      prevPapVal = 'NILM'
    ) then 'Cotest-negative'
    when (
      prev2HpvVal is null and
      prev2PapVal is null and
      prevHpvVal = 'HPV-negative' and (
        prevPapVal = 'ASC-US' or
        prevPapVal = 'LSIL'
      )
    ) then ' HPV-negative/ASCUS/LSIL'
    when (
      prev2HpvVal is null and
      prev2PapVal is null and
      prevHpvVal = 'HPV-negative' and
      prevPapVal is null
    ) then 'HPV-negative'
    when (
      prev2HpvVal = 'HPV-negative' and
      prev2PapVal = 'NILM' and
      prevHpvVal = 'HPV-negative' and
      prevPapVal = 'NILM'
    ) then 'Cotest-negative x2'
    when (
      prev2HpvVal = 'HPV-negative' and
      prev2PapVal is null and
      prevHpvVal = 'HPV-negative' and
      prevPapVal is null
    ) then 'HPV-negative x2'
    else null
  end

define function AscusLsilPap(currPapVal String):
  if (
    currPapVal = 'ASC-US' or
    currPapVal = 'LSIL'
   ) then 
    'ASC-US/LSIL'
  else 
    'NULL'

define function GetPostColposcopyManagement(preBiopsyHpvVal String, preBiopsyPapVal String, biopsyVal String, prev2HpvVal String, prev2PapVal String, prevHpvVal String, prevPapVal String, currHpvVal String, currPapVal String):
  if biopsyVal = '<CIN1' or biopsyVal = 'CIN1' then
    Coalesce(
      Coalesce( // Case 1: Explicit current cytology
        PostColposcopyTable T
          where T.preColposcopyResult = HighOrLowGradeResults(preBiopsyHpvVal, preBiopsyPapVal)
            and T.postColposcopyPastHistory = PostColposcopyPastHistory(prev2HpvVal, prev2PapVal, prevHpvVal, prevPapVal)
            and T.hpv = currHpvVal
            and T.pap = currPapVal
            return T.management // TODO: Return table number and risk scores
      ),
      Coalesce( // Case 2: Current cytology might be specified as 'High Grade'
        PostColposcopyTable T
          where T.preColposcopyResult = HighOrLowGradeResults(preBiopsyHpvVal, preBiopsyPapVal)
            and T.postColposcopyPastHistory = PostColposcopyPastHistory(prev2HpvVal, prev2PapVal, prevHpvVal, prevPapVal)
            and T.hpv = currHpvVal
            and T.pap = HighOrLowGradeResults(currHpvVal, currPapVal)
            return T.management
      ),
      Coalesce( // Case 3: Current cytology might be specified as 'ASC-US/LSIL'
        PostColposcopyTable T
          where T.preColposcopyResult = HighOrLowGradeResults(preBiopsyHpvVal, preBiopsyPapVal)
            and T.postColposcopyPastHistory = PostColposcopyPastHistory(prev2HpvVal, prev2PapVal, prevHpvVal, prevPapVal)
            and T.hpv = currHpvVal
            and T.pap = AscusLsilPap(currPapVal)
            return T.management
      ),
      Coalesce( // Case 4: Current cytology might be specified as 'ALL'
        PostColposcopyTable T
          where T.preColposcopyResult = HighOrLowGradeResults(preBiopsyHpvVal, preBiopsyPapVal)
            and T.postColposcopyPastHistory = PostColposcopyPastHistory(prev2HpvVal, prev2PapVal, prevHpvVal, prevPapVal)
            and T.hpv = currHpvVal
            and T.pap = 'ALL'
            return T.management
      )
    )
  else
    null

define function TreatCin2AndCin3TheSame(biopsyVal String):
  if biopsyVal = 'CIN2' or biopsyVal = 'CIN3' then
    'CIN3'
  else
    null

define function LongTermSurveillance(prev2HpvVal String, prev2PapVal String, prevHpvVal String, prevPapVal String, currHpvVal String, currPapVal String):
  case
    when (
      prev2HpvVal = 'HPV-negative' and
      prev2PapVal = 'ALL' and
      prevHpvVal = 'HPV-negative' and
      prevPapVal = 'ALL' and
      currHpvVal = 'HPV-negative' and
      prevPapVal = 'ALL'
    ) then 'HPV-negative x3'
    when (
      prev2HpvVal = 'HPV-negative' and
      prev2PapVal = 'NILM' and
      prevHpvVal = 'HPV-negative' and
      prevPapVal = 'NILM' and
      currHpvVal = 'HPV-negative' and
      prevPapVal = 'NILM'
    ) then 'Cotest-negative x3'
    when (
      prev2HpvVal is null and
      prev2PapVal is null and
      prevHpvVal = 'HPV-negative' and
      prevPapVal = 'ALL' and
      currHpvVal = 'HPV-negative' and
      prevPapVal = 'ALL'
    ) then 'HPV-negative x2'
    when (
      prev2HpvVal is null and
      prev2PapVal is null and
      prevHpvVal = 'HPV-negative' and
      prevPapVal = 'NILM' and
      currHpvVal = 'HPV-negative' and
      prevPapVal = 'NILM'
    ) then 'Cotest-negative x2'
    else null
  end

define function GetPostTreatmentManagement(biopsyVal String, prev2HpvVal String, prev2PapVal String, prevHpvVal String, prevPapVal String, currHpvVal String, currPapVal String):
  if biopsyVal = 'CIN2' or biopsyVal = 'CIN3' then
    Coalesce(
      Coalesce( // Case 1: Long-term surveillance
        PostTreatmentTable T
          where T.biopsy = TreatCin2AndCin3TheSame(biopsyVal)
            and T.hpv = LongTermSurveillance(prev2HpvVal, prev2PapVal, prevHpvVal, prevPapVal, currHpvVal, currPapVal)
            and T.pap = 'none'
            return T.management
      ),
      Coalesce( // Case 2: Explicit current cytology
        PostTreatmentTable T
          where T.biopsy = TreatCin2AndCin3TheSame(biopsyVal)
            and T.hpv = currHpvVal
            and T.pap = currPapVal
            return T.management
      ),
      Coalesce( // Case 3: Current cytology might be specified as 'High Grade'
        PostTreatmentTable T
          where T.biopsy = TreatCin2AndCin3TheSame(biopsyVal)
            and T.hpv = currHpvVal
            and T.pap = HighOrLowGradeResults(currHpvVal, currPapVal)
            return T.management
      ),
      Coalesce( // Case 4: Current cytology might be specified as 'ASC-US/LSIL'
        PostTreatmentTable T
          where T.biopsy = TreatCin2AndCin3TheSame(biopsyVal)
            and T.hpv = currHpvVal
            and T.pap = AscusLsilPap(currPapVal)
            return T.management
      )
    )
  else
    null

