{
  "resourceType": "Library",
  "id": "CCSMCommonFunctions",
  "url": "http://OUR-PLACEHOLDER-URL.com/Library/AutogeneratedTableLookup",
  "version": "1.0.0",
  "name": "CCSMCommonFunctions",
  "title": "CCSMCommonFunctions",
  "status": "active",
  "experimental": false,
  "type": {
    "coding": [
      {
        "code": "logic-library"
      }
    ]
  },
  "relatedArtifact": [
    {
      "type": "documentation",
      "url": "https://github.com/cqframework/clinical_quality_language/wiki/FHIRHelpers",
      "document": {
        "url": "https://github.com/cqframework/clinical_quality_language/wiki/FHIRHelpers"
      }
    },
    {
      "type": "depends-on",
      "resource": "http://hl7.org/fhir/Library/FHIR-ModelInfo"
    },
    {
      "type": "depends-on",
      "resource": "Library/CDSConnectCommonsforFHIRv401"
    },
    {
      "type": "depends-on",
      "resource": "Library/FHIRHelpers"
    }
  ],
  "content": [
    {
      "contentType": "text/cql",
      "data": "LyogIAogIExpYnJhcnk6IENvbW1vbiBGdW5jdGlvbnMgZm9yIENlcnZpY2FsIENhbmNlciBTY3JlZW5pbmcgYW5kIE1hbmFnZW1lbnQKICBBdXRob3I6IENNUyBBbGxpYW5jZSB0byBNb2Rlcm5pemUgSGVhbHRoY2FyZSwgb3BlcmF0ZWQgYnkgVEhFIE1JVFJFIENvcnBvcmF0aW9uLgoKICAoQykgMjAyMSBUaGUgTUlUUkUgQ29ycG9yYXRpb24uIEFsbCBSaWdodHMgUmVzZXJ2ZWQuIAogIEFwcHJvdmVkIGZvciBQdWJsaWMgUmVsZWFzZTogMjEtMTU1Ni4gCiAgRGlzdHJpYnV0aW9uIFVubGltaXRlZC4KCiAgVW5sZXNzIG90aGVyd2lzZSBub3RlZCwgdGhpcyB3b3JrIGlzIGF2YWlsYWJsZSB1bmRlciBhbiBBcGFjaGUgMi4wIGxpY2Vuc2UuIAogIEl0IHdhcyBwcm9kdWNlZCBieSB0aGUgTUlUUkUgQ29ycG9yYXRpb24gZm9yIHRoZSBEaXZpc2lvbiBvZiBDYW5jZXIgUHJldmVudGlvbiAKICBhbmQgQ29udHJvbCwgQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sIGFuZCBQcmV2ZW50aW9uIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgCiAgU3RhdGVtZW50IG9mIFdvcmssIGNvbnRyYWN0IG51bWJlciA3NUZDTUMxOEQwMDQ3LCB0YXNrIG9yZGVyIG51bWJlciA3NUQzMDEyMEYwOTc0My4KKi8KCmxpYnJhcnkgQ0NTTUNvbW1vbkZ1bmN0aW9ucyB2ZXJzaW9uICcxLjAuMCcKCnVzaW5nIEZISVIgdmVyc2lvbiAnNC4wLjEnCgppbmNsdWRlIENEU0Nvbm5lY3RDb21tb25zZm9yRkhJUnY0MDEgdmVyc2lvbiAnMS4wLjAnIGNhbGxlZCBDM0YKaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICc0LjAuMScgY2FsbGVkIEZISVJIZWxwZXJzCgpjb2Rlc3lzdGVtICJDT05EVkVSU1RBVFVTIjogJ2h0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vY29uZGl0aW9uLXZlci1zdGF0dXMnCgpjb2RlICJDb25kaXRpb24gUmVmdXRlZCBjb2RlIjogJ3JlZnV0ZWQnIGZyb20gIkNPTkRWRVJTVEFUVVMiIGRpc3BsYXkgJ1JlZnV0ZWQnCmNvZGUgIkNvbmRpdGlvbiBFbnRlcmVkIGluIEVycm9yIGNvZGUiOiAnZW50ZXJlZC1pbi1lcnJvcicgZnJvbSAiQ09ORFZFUlNUQVRVUyIgZGlzcGxheSAnRW50ZXJlZCBpbiBFcnJvcicKCmNvbmNlcHQgIkNvbmRpdGlvbiBSZWZ1dGVkIjogeyAiQ29uZGl0aW9uIFJlZnV0ZWQgY29kZSIgfSBkaXNwbGF5ICdSZWZ1dGVkJwpjb25jZXB0ICJDb25kaXRpb24gRW50ZXJlZCBpbiBFcnJvciI6IHsgIkNvbmRpdGlvbiBFbnRlcmVkIGluIEVycm9yIGNvZGUiIH0gZGlzcGxheSAnRW50ZXJlZCBpbiBFcnJvcicKCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCiAqIE5PVElDRTogVGhpcyBmb2xsb3dpbmcgY29kZSBoYXMgYmVlbiBhZGFwdGVkIGZyb20gIkZhY3RvcnMgdG8gQ29uc2lkZXIgaW4gCiAqIE1hbmFnaW5nIENocm9uaWMgUGFpbjogQSBQYWluIE1hbmFnZW1lbnQgU3VtbWFyeSwiIGF2YWlsYWJsZSBhdDoKICogaHR0cHM6Ly9jZHMuYWhycS5nb3YvY2RzY29ubmVjdC9hcnRpZmFjdC9mYWN0b3JzLWNvbnNpZGVyLW1hbmFnaW5nLWNocm9uaWMtcGFpbi1wYWluLW1hbmFnZW1lbnQtc3VtbWFyeQogKiBJdCBpcyBtYWRlIGF2YWlsYWJsZSB2aWEgYW4gQXBhY2hlIDIuMCBsaWNlbnNlLgoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoKLy8gUmV0dXJucyB0aGUgZmlyc3QtZm91bmQgZGlzcGxheSB0ZXh0IGZvciBhIENvZGVhYmxlQ29uY2VwdCwgbG9va2luZyBmaXJzdCBhdCB0aGUgYHRleHRgIGF0dHJpYnV0ZSwgdGhlbiB0aGUKLy8gYGRpc3BsYXlgIG9uIGVhY2ggYGNvZGluZ2AgdW50aWwgaXQgZmluZHMgYSBub24tbnVsbCB2YWx1ZS4gIFNvbWUgUEVHIGNvZGVzIGFyZSBub3JtYWxpemVkIGR1ZSB0byBsZW5ndGguCi8vIEBwYXJhbSBjIC0gYSBGSElSIENvZGVhYmxlQ29uY2VwdCB0byBnZXQgdGV4dCBmcm9tCi8vIEByZXR1cm5zIHtTeXN0ZW0uU3RyaW5nfSB0aGUgZGlzcGxheSB0ZXh0IG9yIG51bGwgaWYgbm9uZSBpcyBmb3VuZApkZWZpbmUgZnVuY3Rpb24gQ29uY2VwdFRleHQoYyBGSElSLkNvZGVhYmxlQ29uY2VwdCk6CiAgQ29hbGVzY2UoYy50ZXh0LnZhbHVlLCBDb2FsZXNjZSgoYy5jb2RpbmcpIGMyIHJldHVybiBjMi5kaXNwbGF5LnZhbHVlKSkKCi8vIFJldHVybnMgYSB0ZXh0IHJlcHJlc2VudGF0aW9uIG9mIGEgZGF0ZSB1c2luZyB0aGUgQ1FMIGBUb1N0cmluZ2AgZnVuY3Rpb24uCi8vIEBwYXJhbSBkIC0gYSBGSElSIGRhdGUgdG8gZ2V0IHRleHQgZm9yCi8vIEByZXR1cm5zIHtTeXN0ZW0uU3RyaW5nfSB0aGUgdGV4dCByZXByZXNlbnRhdGlvbiBvZiB0aGUgZGF0ZQpkZWZpbmUgZnVuY3Rpb24gRGF0ZVRleHQoZCBGSElSLmRhdGUpOgogIFRvU3RyaW5nKGQudmFsdWUpCgovLyBSZXR1cm5zIGEgdGV4dCByZXByZXNlbnRhdGlvbiBvZiBhIGRhdGVUaW1lIHVzaW5nIHRoZSBDUUwgYFRvU3RyaW5nYCBmdW5jdGlvbi4KLy8gQHBhcmFtIGQgLSBhIEZISVIgZGF0ZVRpbWUgdG8gZ2V0IHRleHQgZm9yCi8vIEByZXR1cm5zIHtTeXN0ZW0uU3RyaW5nfSB0aGUgdGV4dCByZXByZXNlbnRhdGlvbiBvZiB0aGUgZGF0ZSBwb3J0aW9uIG9mIHRoZSBkYXRlVGltZQpkZWZpbmUgZnVuY3Rpb24gRGF0ZVRpbWVUZXh0KGQgRkhJUi5kYXRlVGltZSk6CiAgRmlyc3QoU3BsaXRPbk1hdGNoZXMoVG9TdHJpbmcoZC52YWx1ZSksICdUJykpCgovLyBSZXR1cm5zIGEgdGV4dCByZXByZXNlbnRhdGlvbiBvZiBhbiBpbnN0YW50IHVzaW5nIHRoZSBDUUwgYFRvU3RyaW5nYCBmdW5jdGlvbi4KLy8gQHBhcmFtIGkgLSBhIEZISVIgaW5zdGFudCB0byBnZXQgdGV4dCBmb3IKLy8gQHJldHVybnMge1N5c3RlbS5TdHJpbmd9IHRoZSB0ZXh0IHJlcHJlc2VudGF0aW9uIG9mIHRoZSBpbnN0YW50CmRlZmluZSBmdW5jdGlvbiBJbnN0YW50VGV4dChpIEZISVIuaW5zdGFudCk6CiAgVG9TdHJpbmcoaS52YWx1ZSkKCi8vIFJldHVybnMgYSB0ZXh0IHJlcHJlc2VudGF0aW9uIG9mIGEgUXVhbnRpdHkgd2l0aCB0aGUgUXVhbnRpdHkncyB2YWx1ZSBhbmQgdW5pdC4KLy8gSWYgdGhlIHVuaXQgaXMge3Njb3JlfSwgdGhlbiBvbWl0IGl0IChhcyBpdCBpcyBub3QgdXNlZnVsIHRvIGRpc3BsYXkpCi8vIEBwYXJhbSBxIC0gYSBGSElSIFF1YW50aXR5IHRvIGdldCB0ZXh0IGZvcgovLyBAcmV0dXJucyB7U3lzdGVtLlN0cmluZ30gdGhlIHRleHQgcmVwcmVzZW50YXRpb24gb2YgdGhlIFF1YW50aXR5CmRlZmluZSBmdW5jdGlvbiBRdWFudGl0eVRleHQocSBGSElSLlF1YW50aXR5KToKICBpZiAocSBpcyBudWxsKSB0aGVuIG51bGwKICBlbHNlIGlmIChxLnVuaXQgaXMgbm90IG51bGwpIHRoZW4gVG9TdHJpbmcocS52YWx1ZS52YWx1ZSkgKyAnICcgKyBxLnVuaXQudmFsdWUKICBlbHNlIGlmIChxLmNvZGUgaXMgbm90IG51bGwpIHRoZW4gVG9TdHJpbmcocS52YWx1ZS52YWx1ZSkgKyAnICcgKyBxLmNvZGUudmFsdWUKICBlbHNlIFRvU3RyaW5nKHEudmFsdWUudmFsdWUpCgovLyBSZXR1cm5zIGEgdHVwbGUgY29udGFpbmluZyBhIFBlcmlvZCdzIHN0YXJ0IGFuZCBlbmQgYXMgdGV4dCByZXByZXNlbnRhdGlvbnMuCi8vIEBwYXJhbSBwIC0gYSBGSElSIFBlcmlvZCB0byBnZXQgYSB0dXBsZSBmb3IKLy8gQHJldHVybnMge1R1cGxlPFN0YXJ0IFN5c3RlbS5TdHJpbmcsIEVuZCBTeXN0ZW0uU3RyaW5nPn0gdGhlIHR1cGxlIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBQZXJpb2QKZGVmaW5lIGZ1bmN0aW9uIFBlcmlvZE9iamVjdChwIEZISVIuUGVyaW9kKToKICBpZiBwIGlzIG51bGwgdGhlbiBudWxsCiAgZWxzZQogICAgewogICAgICBTdGFydDogRGF0ZVRpbWVUZXh0KHAuInN0YXJ0IiksCiAgICAgIEVuZDogRGF0ZVRpbWVUZXh0KHAuImVuZCIpCiAgICB9CgovLyBSZXR1cm5zIGEgdHVwbGUgY29udGFpbmluZyBhIFJhbmdlJ3MgbG93IGFuZCBoaWdoIGFzIHRleHQgcmVwcmVzZW50YXRpb25zLgovLyBAcGFyYW0gciAtIGEgRkhJUiBSYW5nZSB0byBnZXQgYSB0dXBsZSBmb3IKLy8gQHJldHVybnMge1R1cGxlPExvdyBTeXN0ZW0uU3RyaW5nLCBIaWdoIFN5c3RlbS5TdHJpbmc+fSB0aGUgdHVwbGUgcmVwcmVzZW50YXRpb24gb2YgdGhlIFJhbmdlCmRlZmluZSBmdW5jdGlvbiBSYW5nZU9iamVjdChyIEZISVIuUmFuZ2UpOgogIGlmIHIgaXMgbnVsbCB0aGVuIG51bGwKICBlbHNlCiAgICB7CiAgICAgIExvdzogUXVhbnRpdHlUZXh0KHIubG93KSwKICAgICAgSGlnaDogUXVhbnRpdHlUZXh0KHIuaGlnaCkKICAgIH0KCmRlZmluZSBmdW5jdGlvbiBPYnNlcnZhdGlvbkRhdGUobyBGSElSLk9ic2VydmF0aW9uKToKICBDb2FsZXNjZSgKICAgIChvLmVmZmVjdGl2ZSBhcyBGSElSLmRhdGVUaW1lKS52YWx1ZSwKICAgIChvLmVmZmVjdGl2ZSBhcyBGSElSLmluc3RhbnQpLnZhbHVlLAogICAgKG8uZWZmZWN0aXZlIGFzIEZISVIuUGVyaW9kKS4iZW5kIi52YWx1ZSwKICAgIChvLmVmZmVjdGl2ZSBhcyBGSElSLlBlcmlvZCkuInN0YXJ0Ii52YWx1ZSwKICAgIChvLmlzc3VlZCBhcyBGSElSLmluc3RhbnQpLnZhbHVlCiAgKQoKLy8gUmV0dXJucyBhIHRleHQgcmVwcmVzZW50YXRpb24gb2YgYSBkYXRlIGFzc29jaWF0ZWQgd2l0aCBhbiBPYnNlcnZhdGlvbiwgcHJlZmVycmluZyBgZWZmZWN0aXZlRGF0ZVRpbWVgLCB0aGVuCi8vIGBlZmZlY3RpdmVQZXJpb2Quc3RhcnRgLCB0aGVuIGBpc3N1ZWRgLgovLyBAcGFyYW0gbyAtIGEgRkhJUiBPYnNlcnZhdGlvbiB0byBnZXQgdGhlIHRleHQgZGF0ZSBmcm9tCi8vIEByZXR1cm5zIHtTeXN0ZW0uU3RyaW5nfSB0aGUgdGV4dCByZXByZXNlbnRhdGlvbiBvZiBhIHJlbGV2YW50IGRhdGUgZnJvbSB0aGUgT2JzZXJ2YXRpb24KZGVmaW5lIGZ1bmN0aW9uIE9ic2VydmF0aW9uRGF0ZVN0cmluZyhvIEZISVIuT2JzZXJ2YXRpb24pOgogIENvYWxlc2NlKAogICAgRGF0ZVRpbWVUZXh0KG8uZWZmZWN0aXZlIGFzIEZISVIuZGF0ZVRpbWUpLAogICAgSW5zdGFudFRleHQoby5lZmZlY3RpdmUgYXMgRkhJUi5pbnN0YW50KSwKICAgIERhdGVUaW1lVGV4dCgoby5lZmZlY3RpdmUgYXMgRkhJUi5QZXJpb2QpLiJlbmQiKSwKICAgIERhdGVUaW1lVGV4dCgoby5lZmZlY3RpdmUgYXMgRkhJUi5QZXJpb2QpLiJzdGFydCIpLAogICAgSW5zdGFudFRleHQoby5pc3N1ZWQpCiAgKQoKLy8gUmV0dXJucyBhIHRleHQgcmVwcmVzZW50YXRpb24gb2YgYSBkYXRlIGFzc29jaWF0ZWQgd2l0aCBhIE1lZGljYXRpb25TdGF0ZW1lbnQsIHByZWZlcnJpbmcgYGVmZmVjdGl2ZURhdGVUaW1lYCwgdGhlbgovLyBgLnN0YXJ0YC4KLy8gQHBhcmFtIHMgLSBhIEZISVIgTWVkaWNhdGlvblN0YXRlbWVudCB0byBnZXQgdGhlIHRleHQgZGF0ZSBmcm9tCi8vIEByZXR1cm5zIHtTeXN0ZW0uU3RyaW5nfSB0aGUgdGV4dCByZXByZXNlbnRhdGlvbiBvZiBhIHJlbGV2YW50IGRhdGUgZnJvbSB0aGUgTWVkaWNhdGlvblN0YXRlbWVudApkZWZpbmUgZnVuY3Rpb24gTWVkaWNhdGlvblN0YXRlbWVudERhdGUocyBGSElSLk1lZGljYXRpb25TdGF0ZW1lbnQpOgogIENvYWxlc2NlKAogICAgRGF0ZVRpbWVUZXh0KHMuZWZmZWN0aXZlIGFzIEZISVIuZGF0ZVRpbWUpLAogICAgRGF0ZVRpbWVUZXh0KChzLmVmZmVjdGl2ZSBhcyBGSElSLlBlcmlvZCkuImVuZCIpLAogICAgRGF0ZVRpbWVUZXh0KChzLmVmZmVjdGl2ZSBhcyBGSElSLlBlcmlvZCkuInN0YXJ0IikKICApCgovLyBSZXR1cm5zIGEgdGV4dCByZXByZXNlbnRhdGlvbiBvZiBhIENvbmRpdGlvbidzIG9uc2V0LCB3aGV0aGVyIHJlcHJlc2VudGVkIGFzIGEgZGF0ZVRpbWUsIFBlcmlvZCwgUXVhbnRpdHkgKEFnZSksCi8vIFJhbmdlIChBZ2UpLCBvciBzdHJpbmcuCi8vIEBwYXJhbSBjIC0gYSBGSElSIENvbmRpdGlvbiB0byBnZXQgdGhlIHRleHQgcmVwcmVzZW50YXRpb24gb2YgdGhlIG9uc2V0IGZyb20KLy8gQHJldHVybnMge1N5c3RlbS5TdHJpbmd9IHRoZSB0ZXh0IHJlcHJlc2VudGF0aW9uIG9mIHRoZSBDb25kaXRpb24ncyBvbnNldApkZWZpbmUgZnVuY3Rpb24gT25zZXQoYyBGSElSLkNvbmRpdGlvbik6CiAgQ29hbGVzY2UoIExpc3R7CiAgICBEYXRlVGltZVRleHQoYy5vbnNldCBhcyBGSElSLmRhdGVUaW1lKSwKICAgIFF1YW50aXR5VGV4dChjLm9uc2V0IGFzIEZISVIuQWdlKSwKICAgIFBlcmlvZE9iamVjdChjLm9uc2V0IGFzIEZISVIuUGVyaW9kKSwKICAgIFJhbmdlT2JqZWN0KGMub25zZXQgYXMgRkhJUi5SYW5nZSksCiAgICAoYy5vbnNldCBhcyBGSElSLnN0cmluZykudmFsdWUKICB9KQoKLy8gUmV0dXJucyBhIHRleHQgcmVwcmVzZW50YXRpb24gb2YgYSBDb25kaXRpb24ncyBhYmF0ZW1lbnQsIHdoZXRoZXIgcmVwcmVzZW50ZWQgYXMgYSBkYXRlVGltZSwgUGVyaW9kLCBRdWFudGl0eSAoQWdlKSwKLy8gUmFuZ2UgKEFnZSksIHN0cmluZywgb3IgYm9vbGVhbi4KLy8gQHBhcmFtIGMgLSBhIEZISVIgQ29uZGl0aW9uIHRvIGdldCB0aGUgdGV4dCByZXByZXNlbnRhdGlvbiBvZiB0aGUgYWJhdGVtZW50IGZyb20KLy8gQHJldHVybnMge1N5c3RlbS5TdHJpbmd9IHRoZSB0ZXh0IHJlcHJlc2VudGF0aW9uIG9mIHRoZSBDb25kaXRpb24ncyBhYmF0ZW1lbnQKZGVmaW5lIGZ1bmN0aW9uIEFiYXRlbWVudChjIEZISVIuQ29uZGl0aW9uKToKICBDb2FsZXNjZSggTGlzdHsKICAgIERhdGVUaW1lVGV4dChjLmFiYXRlbWVudCBhcyBGSElSLmRhdGVUaW1lKSwKICAgIC8vIFF1YW50aXR5VGV4dChjLmFiYXRlbWVudCBhcyBGSElSLkFnZSksCiAgICBQZXJpb2RPYmplY3QoYy5hYmF0ZW1lbnQgYXMgRkhJUi5QZXJpb2QpLAogICAgUmFuZ2VPYmplY3QoYy5hYmF0ZW1lbnQgYXMgRkhJUi5SYW5nZSksCiAgICAoYy5hYmF0ZW1lbnQgYXMgRkhJUi5zdHJpbmcpLnZhbHVlCiAgfSkKCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCiAqIEVORDogQ29kZSBhZGFwdGVkIGZyb20gIkZhY3RvcnMgdG8gQ29uc2lkZXIgaW4gTWFuYWdpbmcgQ2hyb25pYyBQYWluOiBBIFBhaW4gCiAqIE1hbmFnZW1lbnQgU3VtbWFyeSIKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCiogQ29uZGl0aW9uIEZ1bmN0aW9ucwoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoKZGVmaW5lIGZ1bmN0aW9uIENvbmRpdGlvbkRhdGUoQyBDb25kaXRpb24pOgogIENvYWxlc2NlKAogICAgKEMub25zZXQgYXMgRkhJUi5kYXRlVGltZSkudmFsdWUsCiAgICAoQy5vbnNldCBhcyBGSElSLlBlcmlvZCkuImVuZCIudmFsdWUsCiAgICAoQy5vbnNldCBhcyBGSElSLlBlcmlvZCkuInN0YXJ0Ii52YWx1ZSwKICAgIEMucmVjb3JkZWREYXRlLnZhbHVlCiAgKQoKLyoqCiAqIFRoZSBvbGRlc3QgY29uZGl0aW9uLiAgRm9yIGVhY2ggQ29uZGl0aW9uLCB0aGlzIGFsZ29yaXRobSB3aWxsIHVzZSB0aGUgQ29hbGVzY2UgZnVuY3Rpb24sIHdoaWNoIHVzZXMgdGhlCiAqIGZpcnN0IG5vbi1udWxsIHJlc3VsdCBmcm9tIHRoZXNlIGZpZWxkczogb25zZXREYXRlVGltZSwgb25zZXRQZXJpb2Quc3RhcnQsIGFzc2VydGVkRGF0ZSwgb25zZXRQZXJpb2QuZW5kLgogKiBUaGUgZm91bmQgZGF0ZSB3aWxsIGJlIHVzZWQgdG8gY29tcGFyZSBDb25kaXRpb25zIGFuZCBkZXRlcm1pbmUgdGhlIG9sZGVzdCBvbmUuCiAqIEBwYXJhbSBDb25kTGlzdCAtIGEgbGlzdCBvZiBDb25kaXRpb25zCiAqIEByZXR1cm5zIHtDb25kaXRpb259IHRoZSBvbGRlc3QgQ29uZGl0aW9uIGZyb20gdGhlIGxpc3QsIG9yIG51bGwgaWYgbnVsbCB3YXMgcGFzc2VkIGluCiAqLwpkZWZpbmUgZnVuY3Rpb24gT2xkZXN0Q29uZGl0aW9uKENvbmRMaXN0IExpc3Q8Q29uZGl0aW9uPik6CiAgRmlyc3QoQ29uZExpc3QgQyBzb3J0IGJ5IENvYWxlc2NlKAogICAgKG9uc2V0IGFzIEZISVIuZGF0ZVRpbWUpLnZhbHVlLAogICAgKG9uc2V0IGFzIEZISVIuUGVyaW9kKS4ic3RhcnQiLnZhbHVlLAogICAgcmVjb3JkZWREYXRlLnZhbHVlLAogICAgKG9uc2V0IGFzIEZISVIuUGVyaW9kKS4iZW5kIi52YWx1ZSkKICApCgovKioKICogRGF0ZSBvZiB0aGUgb2xkZXN0IGNvbmRpdGlvbiBpbiBhIGxpc3QuICBGb3IgZWFjaCBDb25kaXRpb24sIHRoaXMgYWxnb3JpdGhtIHdpbGwgdXNlIHRoZSBDb2FsZXNjZSBmdW5jdGlvbiwgd2hpY2ggdXNlcyB0aGUKICogZmlyc3Qgbm9uLW51bGwgcmVzdWx0IGZyb20gdGhlc2UgZmllbGRzOiBvbnNldERhdGVUaW1lLCBvbnNldFBlcmlvZC5zdGFydCwgYXNzZXJ0ZWREYXRlLCBvbnNldFBlcmlvZC5lbmQuCiAqIFRoZSBmb3VuZCBkYXRlIHdpbGwgYmUgdXNlZCB0byBjb21wYXJlIENvbmRpdGlvbnMgYW5kIGRldGVybWluZSB0aGUgb2xkZXN0IG9uZS4gVGhlIGRhdGUgb2YgdGhlIG9sZGVzdCBDb25kaXRpb24KICogd2lsbCBiZSByZXR1cm5lZC4KICogQHBhcmFtIENvbmRMaXN0IC0gYSBsaXN0IG9mIENvbmRpdGlvbnMKICogQHJldHVybnMge1N5c3RlbS5TdHJpbmd9IHRoZSB0ZXh0IHJlcHJlc2VudGF0aW9uIG9mIHRoZSBDb25kaXRpb24ncyBkYXRlCiAqLwpkZWZpbmUgZnVuY3Rpb24gRGF0ZU9mRmlyc3RDb25kaXRpb24oQ29uZExpc3QgTGlzdDxDb25kaXRpb24+KToKICBDb25kaXRpb25EYXRlKAogICAgT2xkZXN0Q29uZGl0aW9uKAogICAgICBDb25kTGlzdAogICAgKQogICkKCi8qKgogKiBDb25kaXRpb25zIHRoYXQgYXJlIHZhbGlkLiBUaGlzIGlzIHJlZmxlY3RlZCBieSBhIENvbmRpdGlvbiB0aGF0IGRvZXMgbm90IGhhdmUgYSB2ZXJpZmljYXRpb25TdGF0dXMgb2YgJ3JlZnV0ZWQnIG9yIGBlbnRlcmVkLWluLWVycm9yYC4KICogQHNlZSBodHRwOi8vaGw3Lm9yZy9maGlyL1I0L3ZhbHVlc2V0LWNvbmRpdGlvbi12ZXItc3RhdHVzLmh0bWwKICogQHBhcmFtIENvbmRMaXN0IC0gYSBsaXN0IG9mIENvbmRpdGlvbnMKICogQHJldHVybnMge0xpc3Q8Q29uZGl0aW9uPn0gYSBsaXN0IG9mIHZhbGlkIENvbmRpdGlvbnMsIG9yIG51bGwgaWYgbnVsbCB3YXMgcGFzc2VkIGluCiAqLwpkZWZpbmUgZnVuY3Rpb24gVmFsaWRDb25kaXRpb24oQ29uZExpc3QgTGlzdDxDb25kaXRpb24+KToKICBDb25kTGlzdCBDIHdoZXJlIEMudmVyaWZpY2F0aW9uU3RhdHVzICF+ICJDb25kaXRpb24gUmVmdXRlZCIKICAgIGFuZCBDLnZlcmlmaWNhdGlvblN0YXR1cyAhfiAiQ29uZGl0aW9uIEVudGVyZWQgaW4gRXJyb3IiCgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqIERpYWdub3N0aWNSZXBvcnQgRnVuY3Rpb25zCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgovLyBSZXR1cm5zIGEgdGV4dCByZXByZXNlbnRhdGlvbiBvZiBhIGRhdGUgYXNzb2NpYXRlZCB3aXRoIGEgRGlhZ25vc3RpY1JlcG9ydCwgcHJlZmVycmluZyBgZWZmZWN0aXZlRGF0ZVRpbWVgLCB0aGVuCi8vIGAuc3RhcnRgLgovLyBAcGFyYW0gcyAtIGEgRkhJUiBEaWFnbm9zdGljUmVwb3J0IHRvIGdldCB0aGUgdGV4dCBkYXRlIGZyb20KLy8gQHJldHVybnMge1N5c3RlbS5TdHJpbmd9IHRoZSB0ZXh0IHJlcHJlc2VudGF0aW9uIG9mIGEgcmVsZXZhbnQgZGF0ZSBmcm9tIHRoZSBEaWFnbm9zdGljUmVwb3J0CmRlZmluZSBmdW5jdGlvbiBEaWFnbm9zdGljUmVwb3J0RGF0ZVN0cmluZyhkIEZISVIuRGlhZ25vc3RpY1JlcG9ydCk6CiAgQ29hbGVzY2UoCiAgICBEYXRlVGltZVRleHQoKGQuZWZmZWN0aXZlIGFzIEZISVIuUGVyaW9kKS4iZW5kIiBhcyBGSElSLmRhdGVUaW1lKSwKICAgIERhdGVUaW1lVGV4dChkLmVmZmVjdGl2ZSBhcyBGSElSLmRhdGVUaW1lKSwKICAgIERhdGVUaW1lVGV4dCgoZC5lZmZlY3RpdmUgYXMgRkhJUi5QZXJpb2QpLiJzdGFydCIgYXMgRkhJUi5kYXRlVGltZSkKICApCgpkZWZpbmUgZnVuY3Rpb24gRGlhZ25vc3RpY1JlcG9ydERhdGUoZCBGSElSLkRpYWdub3N0aWNSZXBvcnQpOgogIENvYWxlc2NlKAogICAgKGQuZWZmZWN0aXZlIGFzIEZISVIuUGVyaW9kKS4iZW5kIi52YWx1ZSwKICAgIChkLmVmZmVjdGl2ZSBhcyBGSElSLmRhdGVUaW1lKS52YWx1ZSwKICAgIChkLmVmZmVjdGl2ZSBhcyBGSElSLlBlcmlvZCkuInN0YXJ0Ii52YWx1ZQogICkKCmRlZmluZSBmdW5jdGlvbiBTb3J0ZWREaWFnbm9zdGljUmVwb3J0cyhSZXBvcnRMaXN0IExpc3Q8RkhJUi5EaWFnbm9zdGljUmVwb3J0Pik6CiAgUmVwb3J0TGlzdCBSIHNvcnQgYnkgQ29hbGVzY2UoCiAgICAoZWZmZWN0aXZlIGFzIEZISVIuUGVyaW9kKS4iZW5kIi52YWx1ZSwKICAgIChlZmZlY3RpdmUgYXMgRkhJUi5kYXRlVGltZSkudmFsdWUsCiAgICAoZWZmZWN0aXZlIGFzIEZISVIuUGVyaW9kKS4ic3RhcnQiLnZhbHVlCiAgKQoKZGVmaW5lIGZ1bmN0aW9uIE1vc3RSZWNlbnREaWFnbm9zdGljUmVwb3J0KFJlcG9ydExpc3QgTGlzdDxGSElSLkRpYWdub3N0aWNSZXBvcnQ+KToKICBMYXN0KAogICAgU29ydGVkRGlhZ25vc3RpY1JlcG9ydHMoCiAgICAgIFJlcG9ydExpc3QKICAgICkKICApCgovKioKKiBEaWFnbm9zdGljIFJlcG9ydHMgdGhhdCBhcmUgaXNzdWVkIGluIHRoZSBzcGVjaWZpZWQgImxvb2sgYmFjayIgcGVyaW9kLgoqIFRPRE86IFJlbmFtZSB0byBMb29rQmFjayBvbmNlIHRoZSBleGVjdXRpb24gZW5naW5lIHN1cHBvcnRzIG92ZXJsb2FkZWQgZnVuY3Rpb25zLgoqIEBwYXJhbSBEaWFnbm9zdGljUmVwb3J0TGlzdCAtIGEgbGlzdCBvZiBEaWFnbm9zdGljUmVwb3J0cwoqIEBwYXJhbSBMb29rQmFjayAtIHRoZSBsb29rYmFjayBwZXJpb2QgZm9yIHdoZW4gdGhlIERpYWdub3N0aWNSZXBvcnQgc3BlY2ltZW4gd2FzIGNvbGxlY3RlZAoqIEByZXR1cm5zIHtMaXN0PERpYWdub3N0aWNSZXBvcnQ+fSBhIGxpc3Qgb2YgRGlhZ25vc3RpY1JlcG9ydHMgaW4gdGhlIGxvb2sgYmFjayBwZXJpb2QsIG9yIG51bGwgaWYgbnVsbAoqIHdhcyBwYXNzZWQgaW4KKi8KZGVmaW5lIGZ1bmN0aW9uIExvb2tCYWNrKERpYWdub3N0aWNSZXBvcnRMaXN0IExpc3Q8RGlhZ25vc3RpY1JlcG9ydD4sIExvb2tCYWNrIFN5c3RlbS5RdWFudGl0eSk6CiAgRGlhZ25vc3RpY1JlcG9ydExpc3QgRAogICAgbGV0IExvb2tCYWNrSW50ZXJ2YWw6IEludGVydmFsW05vdygpIC0gTG9va0JhY2ssIE5vdygpXQogICAgd2hlcmUgKEQuZWZmZWN0aXZlIGFzIEZISVIuZGF0ZVRpbWUpLnZhbHVlIGluIExvb2tCYWNrSW50ZXJ2YWwKICAgICAgb3IgQzNGLlBlcmlvZFRvSW50ZXJ2YWwoRC5lZmZlY3RpdmUgYXMgRkhJUi5QZXJpb2QpIG92ZXJsYXBzIExvb2tCYWNrSW50ZXJ2YWwKCiAgLyoqCiogRGlhZ25vc3RpYyBSZXBvcnRzIHRoYXQgYXJlIGlzc3VlZCBpbiB0aGUgc3BlY2lmaWVkICJsb29rIGJhY2siIHBlcmlvZCBhbmQgYWZ0ZXIgYSBzcGVjaWZpZWQgImxvb2sgYmFjayIgZGF0ZQoqIEBwYXJhbSBEaWFnbm9zdGljUmVwb3J0TGlzdCAtIGEgbGlzdCBvZiBEaWFnbm9zdGljUmVwb3J0cwoqIEBwYXJhbSBMb29rQmFjayAtIHRoZSBsb29rYmFjayBwZXJpb2QgZm9yIHdoZW4gdGhlIERpYWdub3N0aWNSZXBvcnQgc3BlY2ltZW4gd2FzIGNvbGxlY3RlZAoqIEBwYXJhbSBMb29rQmFja0RhdGUgLSB0aGUgZGF0ZSB0aGF0IHRoZSBEaWFnbm9zdGljUmVwb3J0IHRlc3QgbXVzdCBmYWxsIGFmdGVyCiogQHJldHVybnMge0xpc3Q8RGlhZ25vc3RpY1JlcG9ydD59IGEgbGlzdCBvZiBEaWFnbm9zdGljUmVwb3J0cyBpbiB0aGUgbG9vayBiYWNrIHBlcmlvZCBhbmQgYWZ0ZXIgdGhlCiogbG9vayBiYWNrIGRhdGUsIG9yIG51bGwgaWYgbnVsbCB3YXMgcGFzc2VkIGluCiovCmRlZmluZSBmdW5jdGlvbiBMb29rQmFjayhEaWFnbm9zdGljUmVwb3J0TGlzdCBMaXN0PERpYWdub3N0aWNSZXBvcnQ+LCBMb29rQmFjayBTeXN0ZW0uUXVhbnRpdHksIExvb2tCYWNrRGF0ZSBTeXN0ZW0uRGF0ZVRpbWUpOgogIERpYWdub3N0aWNSZXBvcnRMaXN0IEQKICAgIGxldCBMb29rQmFja0ludGVydmFsOiBJbnRlcnZhbFtOb3coKSAtIExvb2tCYWNrLCBOb3coKV0KICAgIHdoZXJlICggKChELmVmZmVjdGl2ZSBhcyBGSElSLmRhdGVUaW1lKS52YWx1ZSBpbiBMb29rQmFja0ludGVydmFsKSBhbmQgKChELmVmZmVjdGl2ZSBhcyBGSElSLmRhdGVUaW1lKS52YWx1ZSBhZnRlciBMb29rQmFja0RhdGUpICkKICAgICAgb3IgKCAoQzNGLlBlcmlvZFRvSW50ZXJ2YWwoRC5lZmZlY3RpdmUgYXMgRkhJUi5QZXJpb2QpIG92ZXJsYXBzIExvb2tCYWNrSW50ZXJ2YWwpIGFuZCAoQzNGLlBlcmlvZFRvSW50ZXJ2YWwoRC5lZmZlY3RpdmUgYXMgRkhJUi5QZXJpb2QpIHN0YXJ0cyBhZnRlciBMb29rQmFja0RhdGUpICkKCi8vIFRPRE86IFBhcmFtZXRlcml6ZSBieSBhc3NvY2lhdGlvbiB3aW5kb3cgKGN1cnJlbnRseSBoYXJkLWNvZGVkIHRvIDEgZGF5KQpkZWZpbmUgZnVuY3Rpb24gQXNzb2NpYXRlRGlhZ25vc3RpY1JlcG9ydHMoZDEgRkhJUi5EaWFnbm9zdGljUmVwb3J0LCBkMiBGSElSLkRpYWdub3N0aWNSZXBvcnQpOgogIGlmICgKICAgIChkMS5lZmZlY3RpdmUgYXMgRkhJUi5kYXRlVGltZSkudmFsdWUgd2l0aGluIDEgZGF5IG9mIChkMi5lZmZlY3RpdmUgYXMgRkhJUi5kYXRlVGltZSkudmFsdWUgb3IKICAgIChkMS5lZmZlY3RpdmUgYXMgRkhJUi5kYXRlVGltZSkudmFsdWUgd2l0aGluIDEgZGF5IG9mIChkMi5lZmZlY3RpdmUgYXMgRkhJUi5QZXJpb2QpLiJzdGFydCIudmFsdWUgb3IgCiAgICAoZDEuZWZmZWN0aXZlIGFzIEZISVIuZGF0ZVRpbWUpLnZhbHVlIHdpdGhpbiAxIGRheSBvZiAoZDIuZWZmZWN0aXZlIGFzIEZISVIuUGVyaW9kKS4iZW5kIi52YWx1ZSBvcgogICAgKGQyLmVmZmVjdGl2ZSBhcyBGSElSLmRhdGVUaW1lKS52YWx1ZSB3aXRoaW4gMSBkYXkgb2YgKGQxLmVmZmVjdGl2ZSBhcyBGSElSLlBlcmlvZCkuInN0YXJ0Ii52YWx1ZSBvciAKICAgIChkMi5lZmZlY3RpdmUgYXMgRkhJUi5kYXRlVGltZSkudmFsdWUgd2l0aGluIDEgZGF5IG9mIChkMS5lZmZlY3RpdmUgYXMgRkhJUi5QZXJpb2QpLiJlbmQiLnZhbHVlIG9yCiAgICAoZDEuZWZmZWN0aXZlIGFzIEZISVIuUGVyaW9kKSBvdmVybGFwcyAoZDIuZWZmZWN0aXZlIGFzIEZISVIuUGVyaW9kKQogICkgdGhlbgogICAgdHJ1ZQogIGVsc2UKICAgIGZhbHNlCgpkZWZpbmUgZnVuY3Rpb24gQ29pbmNpZGVudERpYWdub3N0aWNSZXBvcnRzKGQxIEZISVIuRGlhZ25vc3RpY1JlcG9ydCwgZDIgRkhJUi5EaWFnbm9zdGljUmVwb3J0KToKICBpZiAoCiAgICBBc3NvY2lhdGVEaWFnbm9zdGljUmVwb3J0cyhkMSwgZDIpIG9yCiAgICBkMS5lbmNvdW50ZXIgPSBkMi5lbmNvdW50ZXIgb3IKICAgICgKICAgICAgQ29hbGVzY2UoKGQxLmJhc2VkT24pIFIgd2hlcmUgUi50eXBlID0gJ1NlcnZpY2VSZXF1ZXN0JyByZXR1cm4gUi5yZWZlcmVuY2UpID0KICAgICAgQ29hbGVzY2UoKGQyLmJhc2VkT24pIFIgd2hlcmUgUi50eXBlID0gJ1NlcnZpY2VSZXF1ZXN0JyByZXR1cm4gUi5yZWZlcmVuY2UpCiAgICApCiAgKSB0aGVuCiAgICB0cnVlCiAgZWxzZQogICAgZmFsc2UKCgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqIEVuY291bnRlciBGdW5jdGlvbnMKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KCi8qKgogKiBFbmNvdW50ZXJzIHRoYXQgYXJlIHRyaWFnZWQsIGluLXByb2dyZXNzIG9yIGNvbXBsZXRlZC4KICogQHNlZSBodHRwOi8vaGw3Lm9yZy9maGlyL1I0L3ZhbHVlc2V0LWVuY291bnRlci1zdGF0dXMuaHRtbAogKiBAcGFyYW0gRW5jTGlzdCAtIGEgbGlzdCBvZiBFbmNvdW50ZXJzCiAqIEByZXR1cm5zIHtMaXN0PEVuY291bnRlcj59IGEgbGlzdCBvZiBlbmNvdW50ZXJzLCBvciBudWxsIGlmIG51bGwgd2FzIHBhc3NlZCBpbgogKi8KZGVmaW5lIGZ1bmN0aW9uIFJlbGV2YW50RW5jb3VudGVyU3RhdHVzKEVuY0xpc3QgTGlzdDxFbmNvdW50ZXI+KToKICBFbmNMaXN0IEUKICAgIHdoZXJlIEUuc3RhdHVzLnZhbHVlID0gJ3RyaWFnZWQnCiAgICAgIG9yIEUuc3RhdHVzLnZhbHVlID0gJ2luLXByb2dyZXNzJwogICAgICBvciBFLnN0YXR1cy52YWx1ZSA9ICdmaW5pc2hlZCcKCgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqIE1lZGljYXRpb24gRnVuY3Rpb25zCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgovLyBSZXR1cm5zIGEgdGV4dCByZXByZXNlbnRhdGlvbiBvZiBhIGRhdGUgYXNzb2NpYXRlZCB3aXRoIGEgTWVkaWNhdGlvbkFkbWluaXN0cmF0aW9uLCBwcmVmZXJyaW5nIGBlZmZlY3RpdmVEYXRlVGltZWAsIHRoZW4KLy8gYC5zdGFydGAuCi8vIEBwYXJhbSBzIC0gYSBGSElSIE1lZGljYXRpb25BZG1pbmlzdHJhdGlvbiB0byBnZXQgdGhlIHRleHQgZGF0ZSBmcm9tCi8vIEByZXR1cm5zIHtTeXN0ZW0uU3RyaW5nfSB0aGUgdGV4dCByZXByZXNlbnRhdGlvbiBvZiBhIHJlbGV2YW50IGRhdGUgZnJvbSB0aGUgTWVkaWNhdGlvbkFkbWluaXN0cmF0aW9uCmRlZmluZSBmdW5jdGlvbiBNZWRpY2F0aW9uQWRtaW5pc3RyYXRpb25EYXRlKGEgRkhJUi5NZWRpY2F0aW9uQWRtaW5pc3RyYXRpb24pOgogIENvYWxlc2NlKAogICAgRGF0ZVRpbWVUZXh0KGEuZWZmZWN0aXZlIGFzIEZISVIuZGF0ZVRpbWUpLAogICAgRGF0ZVRpbWVUZXh0KChhLmVmZmVjdGl2ZSBhcyBGSElSLlBlcmlvZCkuImVuZCIpLAogICAgRGF0ZVRpbWVUZXh0KChhLmVmZmVjdGl2ZSBhcyBGSElSLlBlcmlvZCkuInN0YXJ0IikKICApCgovKioKKiBNZWRpY2F0aW9uIGFkbWluaXN0cmF0aW9ucyB0aGF0IGFyZSBjb21wbGV0ZWQsIGFjY29yZGluZyB0byBhIHByZXNjcmlwdGlvbi4KKiBAc2VlIGh0dHBzOi8vd3d3LmhsNy5vcmcvZmhpci92YWx1ZXNldC1tZWRpY2F0aW9uLWFkbWluLXN0YXR1cy5odG1sCiogQHBhcmFtIE1lZExpc3QgLSBhIGxpc3Qgb2YgTWVkaWNhdGlvbkFkbWluaXN0cmF0aW9ucwoqIEByZXR1cm5zIHtMaXN0PE1lZGljYXRpb25BZG1pbmlzdHJhdGlvbj59IGEgbGlzdCBvZiBjb21wbGV0ZWQgbWVkaWNhdGlvbiBhZG1pbmlzdHJhdGlvbnMsIG9yIG51bGwgaWYgbnVsbCB3YXMgcGFzc2VkIGluCiovCmRlZmluZSBmdW5jdGlvbiBDb21wbGV0ZWRNZWRpY2F0aW9uQWRtaW5pc3RyYXRpb24oTWVkTGlzdCBMaXN0PE1lZGljYXRpb25BZG1pbmlzdHJhdGlvbj4pOgogIE1lZExpc3QgTQogICAgd2hlcmUgTS5zdGF0dXMudmFsdWUgPSAnY29tcGxldGVkJwoKZGVmaW5lIGZ1bmN0aW9uIENvbXBsZXRlZE1lZGljYXRpb25EaXNwZW5zZShNZWRMaXN0IExpc3Q8TWVkaWNhdGlvbkRpc3BlbnNlPik6CiAgTWVkTGlzdCBNCiAgICB3aGVyZSBNLnN0YXR1cy52YWx1ZSA9ICdjb21wbGV0ZWQnCgovKioKKiBEaWFnbm9zdGljIHJlcG9ydHMgdGhhdCBhcmUgY29tcGxldGVkLgoqIEBzZWUgaHR0cHM6Ly93d3cuaGw3Lm9yZy9maGlyL3ZhbHVlc2V0LWRpYWdub3N0aWMtcmVwb3J0LXN0YXR1cy5odG1sCiogQHBhcmFtIERpYWdub3N0aWNSZXBvcnRMaXN0IC0gYSBsaXN0IG9mIERpYWdub3N0aWNSZXBvcnRzCiogQHJldHVybnMge0xpc3Q8RGlhZ25vc3RpY1JlcG9ydD59IGEgbGlzdCBvZiBjb21wbGV0ZWQgZGlhZ25vc3RpYyByZXBvcnRzLCBvciBudWxsIGlmIG51bGwgd2FzIHBhc3NlZCBpbgoqLwpkZWZpbmUgZnVuY3Rpb24gQ29tcGxldGVkRGlhZ25vc3RpY1JlcG9ydChEaWFnbm9zdGljUmVwb3J0TGlzdCBMaXN0PERpYWdub3N0aWNSZXBvcnQ+KToKICBEaWFnbm9zdGljUmVwb3J0TGlzdCBECiAgICB3aGVyZSBELnN0YXR1cy52YWx1ZSBpbiBMaXN0eydmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcsICdhcHBlbmRlZCd9CgovKioKKiBNZWRpY2F0aW9uIEFkbWluaXN0cmF0aW9ucyB0aGF0IGFyZSBpc3N1ZWQgaW4gdGhlIHNwZWNpZmllZCAibG9vayBiYWNrIiBwZXJpb2QuCiogVE9ETzogUmVuYW1lIHRvIExvb2tCYWNrIG9uY2UgdGhlIGV4ZWN1dGlvbiBlbmdpbmUgc3VwcG9ydHMgb3ZlcmxvYWRlZCBmdW5jdGlvbnMuCiogQHBhcmFtIE1lZExpc3QgLSBhIGxpc3Qgb2YgTWVkaWNhdGlvbkFkbWluaXN0cmF0aW9ucwoqIEBwYXJhbSBMb29rQmFjayAtIHRoZSBsb29rYmFjayBwZXJpb2QgZm9yIHdoZW4gdGhlIG1lZGljYXRpb24gd2FzIHByZXNjcmliZWQKKiBAcmV0dXJucyB7TGlzdDxNZWRpY2F0aW9uQWRtaW5pc3RyYXRpb24+fSBhIGxpc3Qgb2YgTWVkaWNhdGlvbkFkbWluaXN0cmF0aW9ucyBwcmVzY3JpYmVkIGluIHRoZSBsb29rIGJhY2sgcGVyaW9kLCBvciBudWxsIGlmIG51bGwKKiB3YXMgcGFzc2VkIGluCiovCmRlZmluZSBmdW5jdGlvbiBMb29rQmFjayhNZWRMaXN0IExpc3Q8TWVkaWNhdGlvbkFkbWluaXN0cmF0aW9uPiwgTG9va0JhY2sgU3lzdGVtLlF1YW50aXR5KToKICBNZWRMaXN0IE0KICAgIGxldCBMb29rQmFja0ludGVydmFsOiBJbnRlcnZhbFtOb3coKSAtIExvb2tCYWNrLCBOb3coKV0KICAgIHdoZXJlIChNLmVmZmVjdGl2ZSBhcyBGSElSLmRhdGVUaW1lKS52YWx1ZSBpbiBMb29rQmFja0ludGVydmFsCiAgICAgIG9yIEMzRi5QZXJpb2RUb0ludGVydmFsKE0uZWZmZWN0aXZlIGFzIEZISVIuUGVyaW9kKSBvdmVybGFwcyBMb29rQmFja0ludGVydmFsCgovKioKKiBNZWRpY2F0aW9uIHJlcXVlc3RzIHRoYXQgYXJlIGNvbXBsZXRlZCwgYWNjb3JkaW5nIHRvIGEgcHJlc2NyaXB0aW9uLgoqIEBzZWUgaHR0cDovL2hsNy5vcmcvZmhpci9SNC92YWx1ZXNldC1tZWRpY2F0aW9ucmVxdWVzdC1zdGF0dXMuaHRtbAoqIEBwYXJhbSBNZWRMaXN0IC0gYSBsaXN0IG9mIE1lZGljYXRpb25SZXF1ZXN0cwoqIEByZXR1cm5zIHtMaXN0PE1lZGljYXRpb25SZXF1ZXN0Pn0gYSBsaXN0IG9mIGNvbXBsZXRlZCBtZWRpY2F0aW9uIHJlcXVlc3RzLCBvciBudWxsIGlmIG51bGwgd2FzIHBhc3NlZCBpbgoqLwpkZWZpbmUgZnVuY3Rpb24gQ29tcGxldGVkTWVkaWNhdGlvblJlcXVlc3QoTWVkTGlzdCBMaXN0PE1lZGljYXRpb25SZXF1ZXN0Pik6CiAgTWVkTGlzdCBNCiAgICB3aGVyZSBNLnN0YXR1cy52YWx1ZSA9ICdjb21wbGV0ZWQnCgovKioKKiBNZWRpY2F0aW9uIHJlcXVlc3RzIHdpdGggYW4gaW50ZW50IG9mICdvcmRlcicsIG9yIG9uZSBvZiB0aGUgc3ViLWNhdGVnb3JpZXMgb2YgJ29yZGVyJy4KKiBAc2VlIGh0dHA6Ly9obDcub3JnL2ZoaXIvUjQvdmFsdWVzZXQtbWVkaWNhdGlvbnJlcXVlc3QtaW50ZW50Lmh0bWwKKiBAcGFyYW0gTWVkTGlzdCAtIGEgbGlzdCBvZiBNZWRpY2F0aW9uUmVxdWVzdHMKKiBAcmV0dXJucyB7TGlzdDxNZWRpY2F0aW9uUmVxdWVzdD59IGEgbGlzdCBvZiBtZWRpY2F0aW9uIHJlcXVlc3RzIHdpdGggYW4gaW50ZW50IG9mICdvcmRlcicsIG9yIG51bGwgaWYgbnVsbCB3YXMgcGFzc2VkIGluCiovCmRlZmluZSBmdW5jdGlvbiBNZWRpY2F0aW9uUmVxdWVzdHNXaXRoT3JkZXJJbnRlbnQoTWVkTGlzdCBMaXN0PE1lZGljYXRpb25SZXF1ZXN0Pik6CiAgTWVkTGlzdCBNCiAgICB3aGVyZSBNLmludGVudC52YWx1ZSA9ICdvcmRlcicKICAgICAgb3IgTS5pbnRlbnQudmFsdWUgPSAnb3JpZ2luYWwtb3JkZXInCiAgICAgIG9yIE0uaW50ZW50LnZhbHVlID0gJ3JlZmxleC1vcmRlcicKICAgICAgb3IgTS5pbnRlbnQudmFsdWUgPSAnZmlsbGVyLW9yZGVyJwogICAgICBvciBNLmludGVudC52YWx1ZSA9ICdpbnN0YW5jZS1vcmRlcicKCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCiogT2JzZXJ2YXRpb24gRnVuY3Rpb25zCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiBQcm9jZWR1cmUgRnVuY3Rpb25zCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgpkZWZpbmUgZnVuY3Rpb24gUHJvY2VkdXJlRGF0ZShwIEZISVIuUHJvY2VkdXJlKToKICBDb2FsZXNjZSgKICAgIChwLnBlcmZvcm1lZCBhcyBGSElSLmRhdGVUaW1lKS52YWx1ZSwKICAgIChwLnBlcmZvcm1lZCBhcyBGSElSLlBlcmlvZCkuImVuZCIudmFsdWUsCiAgICAocC5wZXJmb3JtZWQgYXMgRkhJUi5QZXJpb2QpLiJzdGFydCIudmFsdWUKICApCgovLyBUT0RPOiBDYW4gcmVwbGFjZSB0aGlzIHdpdGggYW4gb3ZlcmxvYWRlZCBmdW5jdGlvbgovLyBSZXR1cm5zIGEgdGV4dCByZXByZXNlbnRhdGlvbiBvZiBhIGRhdGUgYXNzb2NpYXRlZCB3aXRoIGEgUHJvY2VkdXJlLCBwcmVmZXJyaW5nIGBlZmZlY3RpdmVEYXRlVGltZWAsIHRoZW4KLy8gYC5zdGFydGAuCi8vIEBwYXJhbSBzIC0gYSBGSElSIFByb2NlZHVyZSB0byBnZXQgdGhlIHRleHQgZGF0ZSBmcm9tCi8vIEByZXR1cm5zIHtTeXN0ZW0uU3RyaW5nfSB0aGUgdGV4dCByZXByZXNlbnRhdGlvbiBvZiBhIHJlbGV2YW50IGRhdGUgZnJvbSB0aGUgUHJvY2VkdXJlCmRlZmluZSBmdW5jdGlvbiBQcm9jZWR1cmVEYXRlU3RyaW5nKHAgRkhJUi5Qcm9jZWR1cmUpOgogIENvYWxlc2NlKAogICAgRGF0ZVRpbWVUZXh0KHAucGVyZm9ybWVkIGFzIEZISVIuZGF0ZVRpbWUpLAogICAgRGF0ZVRpbWVUZXh0KChwLnBlcmZvcm1lZCBhcyBGSElSLlBlcmlvZCkuImVuZCIpLAogICAgRGF0ZVRpbWVUZXh0KChwLnBlcmZvcm1lZCBhcyBGSElSLlBlcmlvZCkuInN0YXJ0IikKICApCgogIC8qKgogKiBUaGUgb2xkZXN0IHByb2NlZHVyZS4gIEZvciBlYWNoIFByb2NlZHVyZSwgdGhpcyBhbGdvcml0aG0gd2lsbCB1c2UgdGhlIENvYWxlc2NlIGZ1bmN0aW9uLCB3aGljaCByZXR1cm5zIHRoZQogKiBmaXJzdCBub24tbnVsbCByZXN1bHQgZnJvbSB0aGVzZSBmaWVsZHM6IHBlcmZvcm1lZERhdGVUaW1lLCBwZXJmb3JtZWRQZXJpb2Quc3RhcnQsIHBlcmZvcm1lZFBlcmlvZC5lbmQuCiAqIFRoZSBmb3VuZCBkYXRlIHdpbGwgYmUgdXNlZCB0byBjb21wYXJlIFByb2NlZHVyZXMgYW5kIGRldGVybWluZSB0aGUgb2xkZXN0IG9uZS4KICogQHBhcmFtIFByb2NMaXN0IC0gYSBsaXN0IG9mIFByb2NlZHVyZXMKICogQHJldHVybnMge1Byb2NlZHVyZX0gdGhlIG9sZGVzdCBQcm9jZWR1cmUgZnJvbSB0aGUgbGlzdCwgb3IgbnVsbCBpZiBudWxsIHdhcyBwYXNzZWQgaW4KICovCmRlZmluZSBmdW5jdGlvbiBPbGRlc3RQcm9jZWR1cmUoUHJvY0xpc3QgTGlzdDxQcm9jZWR1cmU+KToKICBGaXJzdChQcm9jTGlzdCBQIHNvcnQgYnkgQ29hbGVzY2UoCiAgICAocGVyZm9ybWVkIGFzIEZISVIuZGF0ZVRpbWUpLnZhbHVlLAogICAgKHBlcmZvcm1lZCBhcyBGSElSLlBlcmlvZCkuInN0YXJ0Ii52YWx1ZSwKICAgIChwZXJmb3JtZWQgYXMgRkhJUi5QZXJpb2QpLiJlbmQiLnZhbHVlKQogICkKCi8qKgogKiBEYXRlIG9mIHRoZSBvbGRlc3QgcHJvY2VkdXJlIGluIGEgbGlzdC4gIEZvciBlYWNoIFByb2NlZHVyZSwgdGhpcyBhbGdvcml0aG0gd2lsbCB1c2UgdGhlIENvYWxlc2NlIGZ1bmN0aW9uLCB3aGljaCByZXR1cm5zIHRoZQogKiBmaXJzdCBub24tbnVsbCByZXN1bHQgZnJvbSB0aGVzZSBmaWVsZHM6IHBlcmZvcm1lZERhdGVUaW1lLCBwZXJmb3JtZWRQZXJpb2QuZW5kLCBwZXJmb3JtZWRQZXJpb2Quc3RhcnQuCiAqIFRoZSBmb3VuZCBkYXRlIHdpbGwgYmUgdXNlZCB0byBjb21wYXJlIFByb2NlZHVyZXMgYW5kIGRldGVybWluZSB0aGUgb2xkZXN0IG9uZS4gVGhlIGRhdGUgb2YgdGhlIG9sZGVzdCBQcm9jZWR1cmUKICogd2lsbCBiZSByZXR1cm5lZC4KICogQHBhcmFtIFByb2NMaXN0IC0gYSBsaXN0IG9mIFByb2NlZHVyZXMKICogQHJldHVybnMge1N5c3RlbS5TdHJpbmd9IHRoZSB0ZXh0IHJlcHJlc2VudGF0aW9uIG9mIHRoZSBQcm9jZWR1cmUncyBkYXRlCiAqLwpkZWZpbmUgZnVuY3Rpb24gRGF0ZU9mRmlyc3RQcm9jZWR1cmUoUHJvY0xpc3QgTGlzdDxQcm9jZWR1cmU+KToKICBQcm9jZWR1cmVEYXRlKAogICAgT2xkZXN0UHJvY2VkdXJlKAogICAgICBQcm9jTGlzdAogICAgKQogICkKCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCiogSW1tdW5pemF0aW9uIEZ1bmN0aW9ucwoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoKLyoqCiogSW1tdW5pemF0aW9ucyB0aGF0IGFyZSBjb21wbGV0ZWQuCiogQHNlZSBodHRwOi8vaGw3Lm9yZy9maGlyL1I0L3ZhbHVlc2V0LWltbXVuaXphdGlvbi1zdGF0dXMuaHRtbAoqIEBwYXJhbSBJbW11bml6YXRpb25MaXN0IC0gYSBsaXN0IG9mIEltbXVuaXphdGlvbnMKKiBAcmV0dXJucyB7TGlzdDxJbW11bml6YXRpb24+fSBhIGxpc3Qgb2YgY29tcGxldGVkIGltbXVuaXphdGlvbnMsIG9yIG51bGwgaWYgbnVsbCB3YXMgcGFzc2VkIGluCiovCmRlZmluZSBmdW5jdGlvbiBDb21wbGV0ZWRJbW11bml6YXRpb24oSW1tdW5pemF0aW9uTGlzdCBMaXN0PEltbXVuaXphdGlvbj4pOgogIEltbXVuaXphdGlvbkxpc3QgSQogICAgd2hlcmUgSS5zdGF0dXMudmFsdWUgPSAnY29tcGxldGVkJwo="
    },
    {
      "contentType": "application/elm+json",
      "data": ""
    }
  ]
}